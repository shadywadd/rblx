-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local function giveWeaponStealerTool(player)
	local mouse = player:GetMouse()

	local tool = Instance.new("Tool")
	tool.Name = "Weapon Stealer"
	tool.RequiresHandle = false
	tool.Parent = player:WaitForChild("Backpack")

	local highlight
	local targetPlayer = nil
	local running = false

	local function clearHighlight()
		if highlight then
			highlight:Destroy()
			highlight = nil
		end
		targetPlayer = nil
	end

	local function createHighlight(model)
		clearHighlight()
		highlight = Instance.new("Highlight")
		highlight.Adornee = model
		highlight.FillColor = Color3.new(1, 0, 0)
		highlight.OutlineColor = Color3.new(1, 1, 1)
		highlight.Parent = workspace
	end

	local function findTargetPlayer()
		local closestPlayer = nil
		local shortestDist = math.huge

		for _, otherPlayer in ipairs(Players:GetPlayers()) do
			if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
				local hrp = otherPlayer.Character.HumanoidRootPart
				local screenPos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(hrp.Position)
				if onScreen then
					local dist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
					if dist < 50 and dist < shortestDist then
						closestPlayer = otherPlayer
						shortestDist = dist
					end
				end
			end
		end

		return closestPlayer
	end

	local function fireAllProximityPromptsOnPlayer(target)
		if not target or not target.Character then return end
		for _, tool in ipairs(target.Character:GetChildren()) do
			if tool:IsA("Tool") then
				for _, descendant in ipairs(tool:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") then
						fireproximityprompt(descendant)
					end
				end
			end
		end
	end

	local function onRenderStep()
		local target = findTargetPlayer()
		if target ~= targetPlayer then
			if target then
				createHighlight(target.Character)
			else
				clearHighlight()
			end
			targetPlayer = target
		end
	end

	tool.Equipped:Connect(function()
		if running then return end
		running = true
		RunService:BindToRenderStep("WeaponStealerHighlight", Enum.RenderPriority.Camera.Value + 1, onRenderStep)
	end)

	tool.Unequipped:Connect(function()
		running = false
		RunService:UnbindFromRenderStep("WeaponStealerHighlight")
		clearHighlight()
		targetPlayer = nil
	end)

	tool.Activated:Connect(function()
		if targetPlayer then
			fireAllProximityPromptsOnPlayer(targetPlayer)
		end
	end)
end

local function nigger()
  giveWeaponStealerTool(game.Players.LocalPlayer)
end


-- UI Library (Rayfield)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Window Setup
local Window = Rayfield:CreateWindow({
    Name = "Weapon Stealer Gui",
    LoadingTitle = "Weapon Stealer Gui",
    LoadingSubtitle = "by shadywadd",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "WeaponStealer"
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

-- Tab
local MainTab = Window:CreateTab("Main", 4483362458)

-- State variables
local jumpEnabled = false
local walkspeedLocked = false
local desiredWalkspeed = 30

-- Function: Monitor and Lock Walkspeed
local function monitorWalkSpeed()
    local function bind()
        local char = workspace:FindFirstChild("Characters")
        if not char then return end
        char = char:FindFirstChild(LocalPlayer.Name)
        if not char then return end

        local ws = char:FindFirstChild("WalkSpeed")
        if not ws or not ws:IsA("NumberValue") then return end

        if ws.Value ~= desiredWalkspeed then
            ws.Value = desiredWalkspeed
        end

        ws:GetPropertyChangedSignal("Value"):Connect(function()
            if walkspeedLocked and ws.Value ~= desiredWalkspeed then
                ws.Value = desiredWalkspeed
            end
        end)
    end

    -- Run on load and on character added
    bind()
    LocalPlayer.CharacterAdded:Connect(function()
        task.wait(1)
        bind()
    end)
end

-- Function: Handle Jump Without Cooldown
local function setupJumpListener()
    UIS.JumpRequest:Connect(function()
        if not jumpEnabled then return end
        local char = LocalPlayer.Character
        if char then
            local humanoid = char:FindFirstChildWhichIsA("Humanoid")
            if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Running then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

local Button = MainTab:CreateButton({
   Name = "Button Example",
   Callback = function()
     nigger()
   end,
})

-- GUI Components
MainTab:CreateToggle({
    Name = "No Jump Cooldown",
    CurrentValue = false,
    Callback = function(Value)
        jumpEnabled = Value
    end
})

MainTab:CreateToggle({
    Name = "Enforce WalkSpeed",
    CurrentValue = false,
    Callback = function(Value)
        walkspeedLocked = Value
        if Value then
            monitorWalkSpeed()
        end
    end
})

MainTab:CreateSlider({
    Name = "WalkSpeed Value",
    Range = {1, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = desiredWalkspeed,
    Callback = function(Value)
        desiredWalkspeed = Value
    end
})

-- Initialize
setupJumpListener()
