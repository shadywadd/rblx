local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local function giveWeaponStealerTool(player)
	local mouse = player:GetMouse()

	local tool = Instance.new("Tool")
	tool.Name = "Weapon Stealer"
	tool.RequiresHandle = false
	tool.Parent = player:WaitForChild("Backpack")

	local highlight
	local targetPlayer = nil
	local running = false

	local function clearHighlight()
		if highlight then
			highlight:Destroy()
			highlight = nil
		end
		targetPlayer = nil
	end

	local function createHighlight(model)
		clearHighlight()
		highlight = Instance.new("Highlight")
		highlight.Adornee = model
		highlight.FillColor = Color3.new(1, 0, 0)
		highlight.OutlineColor = Color3.new(1, 1, 1)
		highlight.Parent = workspace
	end

	local function findTargetPlayer()
		local closestPlayer = nil
		local shortestDist = math.huge

		for _, otherPlayer in ipairs(Players:GetPlayers()) do
			if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
				local hrp = otherPlayer.Character.HumanoidRootPart
				local screenPos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(hrp.Position)
				if onScreen then
					local dist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
					if dist < 50 and dist < shortestDist then
						closestPlayer = otherPlayer
						shortestDist = dist
					end
				end
			end
		end

		return closestPlayer
	end

	local function fireAllProximityPromptsOnPlayer(target)
		if not target or not target.Character then return end
		for _, tool in ipairs(target.Character:GetChildren()) do
			if tool:IsA("Tool") then
				for _, descendant in ipairs(tool:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") then
						fireproximityprompt(descendant)
					end
				end
			end
		end
	end

	local function onRenderStep()
		local target = findTargetPlayer()
		if target ~= targetPlayer then
			if target then
				createHighlight(target.Character)
			else
				clearHighlight()
			end
			targetPlayer = target
		end
	end

	tool.Equipped:Connect(function()
		if running then return end
		running = true
		RunService:BindToRenderStep("WeaponStealerHighlight", Enum.RenderPriority.Camera.Value + 1, onRenderStep)
	end)

	tool.Unequipped:Connect(function()
		running = false
		RunService:UnbindFromRenderStep("WeaponStealerHighlight")
		clearHighlight()
		targetPlayer = nil
	end)

	tool.Activated:Connect(function()
		if targetPlayer then
			fireAllProximityPromptsOnPlayer(targetPlayer)
		end
	end)
end

local function nigger()
  giveWeaponStealerTool(game.Players.LocalPlayer)
end


local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "stfu", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://raw.githubusercontent.com/shadywadd/tester/refs/heads/main/key"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
   Name = "Button Example",
   Callback = function()
     nigger()
   end,
})
